{"version":3,"sources":["down_arrow.svg","Arrow.jsx","Text.jsx","Treasure.png","Treasure_hover.png","Treasure.jsx","star.png","Flying.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Arrow","props","state","className","src","image","Component","texts","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","Text","item","this","randNum","toUpperCase","Treasure","console","log","id","img","onClick","fku","img_hover","Flying","window","location","rickroll","App","header","items","loadItems","bind","bringToTop","setState","concat","document","body","scrollTop","documentElement","index","seed","loader","map","e","emptyRowSegment","pageStart","loadMore","hasMore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yVAAe,MAA0B,uCCkB1BA,G,wDAbb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKjB,OACE,qBAAKC,UAAU,cAAf,SACE,qBAAKC,IAAKC,EAAOF,UAAU,sB,GARfG,cCDhBC,G,MAAQ,CACR,cACA,+BACA,wCACA,iBACA,uBACA,iEAGJ,SAAiBC,GAIb,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAM3BO,CAAQT,G,IAcOU,E,kDAXX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,qDAMf,IAAIgB,EAAOX,EAAMM,KAAKC,MAAMK,KAAKlB,MAAMmB,QAAUb,EAAMK,SAASS,cAChE,OAAS,mBAAGlB,UAAU,yBAAb,SAAuCe,Q,GARrCZ,aCjCJ,G,MAAA,IAA0B,sCCA1B,MAA0B,2CCKnCC,EAAQ,CACZ,kBACA,2BACA,qCAGF,SAAiBC,GAMf,IALA,IACEC,EACAC,EAFEC,EAAeH,EAAMI,OAKlB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAMzBO,CAAQT,G,IAmCOe,E,kDAhCb,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,IAAIgB,EAAOX,EAAMM,KAAKC,MAAMK,KAAKlB,MAAMmB,QAAUb,EAAMK,SAEvD,OADAW,QAAQC,IAAIN,GAEV,qBAAKf,UAAU,cAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,6BAAd,SAA4Ce,IAC5C,sBAAKf,UAAU,YAAf,UACE,qBACEA,UAAU,4BACVsB,GAAG,YACHrB,IAAKsB,EACLC,QAASR,KAAKlB,MAAM2B,MAEtB,qBACEzB,UAAU,4BACVsB,GAAG,QACHrB,IAAKyB,EACLF,QAASR,KAAKlB,MAAM2B,kB,GAxBXtB,aCjCR,G,MAAA,IAA0B,kCCwB1BwB,E,kDAnBb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,uDAMjB6B,OAAOC,SAAW,0E,+BAIlB,OACE,sBAAK7B,UAAU,cAAf,UACE,mBAAGA,UAAW,cAAd,yCACA,qBAAKC,IAAKsB,EAAKvB,UAAU,cAAcwB,QAASR,KAAKc,kB,GAdxC3B,aC+GN4B,E,kDA1Gb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXiC,OAAQ,iCACRC,MAAO,GACPxB,OAAQ,GAEV,EAAKyB,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBATD,E,wDAajBnB,KAAKqB,UAAS,SAACtC,GAAD,MAAY,CACxBkC,MAAOlC,EAAMkC,MAAMK,OAAO5B,KAAKE,UAC/BH,OAAQV,EAAMU,OAAS,Q,mCAKzBO,KAAKqB,UAAS,SAACtC,GAAD,MAAY,CACxBkC,MAAO,GACPxB,OAAQ,EACRuB,OAAQ,wCAEVO,SAASC,KAAKC,UAAY,EAC1BF,SAASG,gBAAgBD,UAAY,I,gCAG7BE,GAER,OADAjC,KAAKkC,KAAKD,GACHjC,KAAKE,W,wCAIZ,OAAO,qBAAKZ,UAAU,kB,+BAGd,IAAD,OACD6C,EACJ,qBAAK7C,UAAU,SAAf,wBAA6B,GAIzBiC,EAAQjB,KAAKjB,MAAMkC,MAAMa,KAAI,SAACC,EAAGJ,GACrC,OAAII,EAAI,KAEJ,sBAAiB/C,UAAU,UAA3B,UACG,EAAKgD,kBACN,cAAC,EAAD,IACA,cAAC,EAAD,CAAM/B,QAAa,GAAJ8B,MAHPJ,GAMHI,EAAI,IAEX,sBAAiB/C,UAAU,UAA3B,UACE,cAAC,EAAD,CAAMiB,QAAa,GAAJ8B,IACf,cAAC,EAAD,IACC,EAAKC,oBAHEL,GAMHI,EAAI,KAEX,sBAAiB/C,UAAU,UAA3B,UACG,EAAKgD,kBACN,cAAC,EAAD,IACA,cAAC,EAAD,MAHQL,GAMHI,EAAI,KAEX,sBAAiB/C,UAAU,UAA3B,UACG,EAAKgD,kBACN,cAAC,EAAD,IACA,cAAC,EAAD,CAAUvB,IAAK,EAAKW,WAAYnB,QAAuB,KAAb8B,EAAI,UAHtCJ,GAQV,sBAAiB3C,UAAU,UAA3B,UACG,EAAKgD,kBACN,cAAC,EAAD,IACC,EAAKA,oBAHEL,MAShB,OACE,qBAAK3C,UAAU,6BAAf,SACE,sBAAKA,UAAU,8BAAf,UACE,mBAAGA,UAAU,qBAAb,SAAmCgB,KAAKjB,MAAMiC,SAC9C,cAAC,IAAD,CACEiB,UAAW,EACXC,SAAUlC,KAAKkB,UACfiB,QAASnC,KAAKjB,MAAMU,OAAS,IAC7BoC,OAAQA,EAJV,SAME,qBAAK7C,UAAU,SAAf,SAAyBiC,e,GAnGnB9B,aCIHiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BZ,M","file":"static/js/main.e4a26373.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/down_arrow.2a820a86.svg\";","import React, { Component } from \"react\";\r\nimport image from \"./down_arrow.svg\";\r\nimport \"./assets/stylesheets/Arrow.css\";\r\n\r\nclass Arrow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row_segment\">\r\n        <img src={image} className=\"plain_arrow\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Arrow;\r\n","import React, { Component } from 'react';\r\nimport './assets/stylesheets/Text.css';\r\n\r\nlet texts = [\r\n    \"Hello there\",\r\n    \"What's cooking good looking?\",\r\n    \"Life is a journey, not a destination.\",\r\n    \"Don't Give Up!\",\r\n    \"You're almost there.\",\r\n    \"Discipline is the bridge between goals and accomplishments.\"\r\n]\r\n\r\nfunction shuffle(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n  \r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n  \r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n  \r\n    return array;\r\n}\r\n\r\nshuffle(texts);\r\n\r\nclass Text extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    render() { \r\n        let item = texts[Math.floor(this.props.randNum * texts.length)].toUpperCase();\r\n        return ( <p className='plain_text row_segment'>{item}</p> );\r\n    }\r\n}\r\n \r\nexport default Text;","export default __webpack_public_path__ + \"static/media/Treasure.b158d82a.png\";","export default __webpack_public_path__ + \"static/media/Treasure_hover.73090160.png\";","import React, { Component } from \"react\";\r\nimport \"./assets/stylesheets/Treasure.css\";\r\nimport img from \"./Treasure.png\";\r\nimport img_hover from \"./Treasure_hover.png\";\r\n\r\nconst texts = [\r\n  \"Dont be tempted\",\r\n  \"I wonder whats inside...\",\r\n  \"Definitely something cool inside\",\r\n];\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,\r\n    temporaryValue,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nshuffle(texts);\r\n\r\nclass Treasure extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let item = texts[Math.floor(this.props.randNum * texts.length)];\r\n    console.log(item);\r\n    return (\r\n      <div className=\"row_segment\">\r\n        <div className=\"treasure_grid\">\r\n          <h6 className=\"treasure_row treasure_text\">{item}</h6>\r\n          <div className=\"img_store\">\r\n            <img\r\n              className=\"treasure_img treasure_row\"\r\n              id=\"not_hover\"\r\n              src={img}\r\n              onClick={this.props.fku}\r\n            ></img>\r\n            <img\r\n              className=\"treasure_img treasure_row\"\r\n              id=\"hover\"\r\n              src={img_hover}\r\n              onClick={this.props.fku}\r\n            ></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Treasure;\r\n","export default __webpack_public_path__ + \"static/media/star.744ebea8.png\";","import React, { Component } from \"react\";\r\nimport './assets/stylesheets/Flying.css';\r\nimport img from \"./star.png\";\r\n\r\nclass Flying extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  rickroll() {\r\n    window.location = \"https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstleyVEVO\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row_segment\">\r\n        <p className =\"flying_text\">If only you clicked that...</p>\r\n        <img src={img} className=\"flying_item\" onClick={this.rickroll}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Flying;\r\n","import \"./assets/stylesheets/App.css\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Component } from \"react\";\r\nimport Arrow from \"./Arrow.jsx\";\r\nimport Text from \"./Text.jsx\";\r\nimport Treasure from \"./Treasure.jsx\";\r\nimport Flying from \"./Flying.jsx\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      header: \"Scroll Down For Something Cool\",\r\n      items: [],\r\n      length: 0,\r\n    };\r\n    this.loadItems = this.loadItems.bind(this);\r\n    this.bringToTop = this.bringToTop.bind(this);\r\n  }\r\n\r\n  loadItems() {\r\n    this.setState((state) => ({\r\n      items: state.items.concat(Math.random()),\r\n      length: state.length + 1,\r\n    }));\r\n  }\r\n\r\n  bringToTop() {\r\n    this.setState((state) => ({\r\n      items: [],\r\n      length: 0,\r\n      header: \"Oops that Treasure is a TRAPsure!\",\r\n    }));\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0;\r\n  }\r\n\r\n  randomNum(index) {\r\n    Math.seed(index);\r\n    return Math.random();\r\n  }\r\n\r\n  emptyRowSegment() {\r\n    return <div className=\"row_segment\"></div>;\r\n  }\r\n\r\n  render() {\r\n    const loader = (\r\n      <div className=\"loader\" key={0}>\r\n        Loading ...\r\n      </div>\r\n    );\r\n    const items = this.state.items.map((e, index) => {\r\n      if (e < 0.025) {\r\n        return (\r\n          <div key={index} className=\"one_row\">\r\n            {this.emptyRowSegment()}\r\n            <Arrow/>\r\n            <Text randNum={e * 20} />\r\n          </div>\r\n        );\r\n      } else if (e < 0.05) {\r\n        return (\r\n          <div key={index} className=\"one_row\">\r\n            <Text randNum={e * 20} />\r\n            <Arrow/>\r\n            {this.emptyRowSegment()}\r\n          </div>\r\n        );\r\n      } else if (e < 0.054) {\r\n        return (\r\n          <div key={index} className=\"one_row\">\r\n            {this.emptyRowSegment()}\r\n            <Arrow/>\r\n            <Flying /> \r\n          </div>\r\n        );\r\n      } else if (e < 0.058) {\r\n        return (\r\n          <div key={index} className=\"one_row\">\r\n            {this.emptyRowSegment()}\r\n            <Arrow/>\r\n            <Treasure fku={this.bringToTop} randNum={(e - 0.054) * 250}></Treasure>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div key={index} className=\"one_row\">\r\n            {this.emptyRowSegment()}\r\n            <Arrow/>\r\n            {this.emptyRowSegment()}\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-sm-12 col-md-9 col-lg-8\">\r\n          <p className=\"text-center banner\">{this.state.header}</p>\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={this.loadItems}\r\n            hasMore={this.state.length < 1000}\r\n            loader={loader}\r\n          >\r\n            <div className=\"tracks\">{items}</div>\r\n          </InfiniteScroll>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/stylesheets/index.css\";\r\nimport App from \"./App.jsx\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}