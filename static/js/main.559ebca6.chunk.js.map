{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","props","state","items","loadItems","bind","this","setState","concat","loader","className","map","e","index","pageStart","loadMore","hasMore","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQA6CeA,E,kDAxCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAO,IAET,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBANA,E,wDAUjBC,KAAKC,UAAS,SAACL,GAAD,MAAY,CAAEC,MAAOD,EAAMC,MAAMK,OAAO,Y,+BAItD,IAAMC,EACJ,qBAAKC,UAAU,SAAf,wBAA6B,GAIzBP,EAAQG,KAAKJ,MAAMC,MAAMQ,KAAI,SAACC,EAAGC,GAAJ,OACjC,oBAAgBH,UAAU,8BAA1B,eAASG,MAKX,OACE,qBAAKH,UAAU,6BAAf,SACE,cAAC,IAAD,CACEI,UAAW,EACXC,SAAUT,KAAKF,UACfY,SAAS,EACTP,OAAQA,EAJV,SAME,qBAAKC,UAAU,SAAf,SAAyBP,Y,GAlCjBc,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.559ebca6.chunk.js","sourcesContent":["import \"./App.css\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Component } from \"react\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n    };\n    this.loadItems = this.loadItems.bind(this);\n  }\n\n  loadItems() {\n    this.setState((state) => ({ items: state.items.concat(\"hi\") }));\n  }\n\n  render() {\n    const loader = (\n      <div className=\"loader\" key={0}>\n        Loading ...\n      </div>\n    );\n    const items = this.state.items.map((e, index) => (\n      <h1 key={index} className=\"col-sm-12 col-md-7 col-lg-5\">\n        hi\n      </h1>\n    ));\n\n    return (\n      <div className=\"row justify-content-center\">\n        <InfiniteScroll\n          pageStart={0}\n          loadMore={this.loadItems}\n          hasMore={true}\n          loader={loader}\n        >\n          <div className=\"tracks\">{items}</div>\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}